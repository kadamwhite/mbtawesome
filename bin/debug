#!/usr/bin/env node
var debug = require( 'debug' )( 'init' );
var _ = require( 'lodash' );

// Get any command-line arguments
var argv = require( 'minimist' )( process.argv.slice( 2 ) );

// Use data fixtures: Configure Replay behavior based on config
// or command-line parameters (e.g. debug --fixture=normal-service)
var config = require( '../server/services/config' );
var fixtureDir;
if ( _.isString( argv.f ) ) {
  fixtureDir = argv.f;
} else if ( _.isString( argv.fixture ) ) {
  fixtureDir = argv.fixture;
} else {
  fixtureDir = config.api.fixtures;
}

// Set up replay to mock API with the selected fixtures
var Replay = require( 'replay' );
// Use the fixture set specified in the config
var path = require( 'path' );
Replay.fixtures = path.join( __dirname, '../fixtures/' + fixtureDir );

// Optionally set record mode from the CLI
if ( argv.record || argv.r ) {
  console.log( 'Recording fixture "' + fixtureDir + '"...' );
  Replay.mode = 'record';
} else {
  console.log( 'Replaying fixture "' + fixtureDir + '"...' );
  config.api.key = 'wX9NwuHnZU2ToO7GmGR9uw';
}

// Require in, configure & load the server
var app = require( '../server' );
var port = 3000;
if ( process.env.PORT ) {
  port = process.env.PORT;
} else if ( _.isString( argv.p ) ) {
  port = argv.p;
} else if ( _.isString( argv.port ) ) {
  port = argv.port;
}
app.set( 'port', port );

var server = app.listen( app.get( 'port' ), function() {
  debug( 'Express server listening on port ' + server.address().port );
});
